from bytecodes import *

bytecodes = {
    0 : ([], END_CODE),
    2 : ([('u8', None)], NEED_HEAP),
    1 : ([(None, "32")], NEED_HEAP),
    6 : ([('u16', None)], PUSH),
    5 : ([('u8', None)], PUSH),
    7 : ([(None, "0")], PUSH),
    8 : ([(None, "1")], PUSH),
    10 : ([('u16', None)], PUSH_ZAP),
    9 : ([('u8', None)], PUSH_ZAP),
    11 : ([(None, "0")], PUSH_ZAP),
    12 : ([(None, "1")], PUSH_ZAP),
    13 : ([(None, "2")], PUSH_ZAP),
    14 : ([(None, "3")], PUSH_ZAP),
    16 : ([('u16', None)], ZAP_STACK),
    15 : ([('u8', None)], ZAP_STACK),
    17 : ([('u8', None)], PUSH_ARG),
    18 : ([(None, "0")], PUSH_ARG),
    19 : ([(None, "1")], PUSH_ARG),
    20 : ([(None, "2")], PUSH_ARG),
    21 : ([(None, "3")], PUSH_ARG),
    22 : ([('u8', None)], PUSH_ZAP_ARG),
    23 : ([(None, "0")], PUSH_ZAP_ARG),
    24 : ([(None, "1")], PUSH_ZAP_ARG),
    25 : ([(None, "2")], PUSH_ZAP_ARG),
    26 : ([(None, "3")], PUSH_ZAP_ARG),
    27 : ([('u8', None)], ZAP_ARG),
    28 : ([(None, "0")], ZAP_ARG),
    29 : ([(None, "1")], ZAP_ARG),
    31 : ([('s16', None)], PUSH_INT),
    30 : ([('s8', None)], PUSH_INT),
    32 : ([(None, "0")], PUSH_INT),
    33 : ([(None, "1")], PUSH_INT),
    34 : ([('u8', None)], PUSH_CHAR),
    36 : ([('u16', None)], PUSH_CONST),
    35 : ([('u8', None)], PUSH_CONST),
    37 : ([(None, "0")], PUSH_CONST),
    38 : ([(None, "1")], PUSH_CONST),
    39 : ([(None, "2")], PUSH_CONST),
    40 : ([(None, "3")], PUSH_CONST),
    41 : ([(None, "4")], PUSH_CONST),
    42 : ([(None, "5")], PUSH_CONST),
    43 : ([(None, "6")], PUSH_CONST),
    44 : ([(None, "7")], PUSH_CONST),
    46 : ([('u16', None)], MK_AP),
    45 : ([('u8', None)], MK_AP),
    47 : ([(None, "0")], MK_AP),
    48 : ([(None, "1")], MK_AP),
    49 : ([(None, "2")], MK_AP),
    50 : ([(None, "3")], MK_AP),
    51 : ([(None, "4")], MK_AP),
    52 : ([(None, "5")], MK_AP),
    53 : ([(None, "6")], MK_AP),
    54 : ([(None, "7")], MK_AP),
    55 : ([(None, "8")], MK_AP),
    56 : ([(None, "9")], MK_AP),
    57 : ([(None, "10")], MK_AP),
    58 : ([(None, "11")], MK_AP),
    59 : ([(None, "12")], MK_AP),
    60 : ([(None, "13")], MK_AP),
    61 : ([(None, "14")], MK_AP),
    62 : ([(None, "15")], MK_AP),
    64 : ([('u16', None), ('u8', None)], MK_PAP),
    63 : ([('u8', None), ('u8', None)], MK_PAP),
    65 : ([('u8', None)], APPLY),
    66 : ([(None, "1")], APPLY),
    67 : ([(None, "2")], APPLY),
    69 : ([('u16', None)], MK_CON),
    68 : ([('u8', None)], MK_CON),
    70 : ([(None, "0")], MK_CON),
    71 : ([(None, "1")], MK_CON),
    72 : ([(None, "2")], MK_CON),
    73 : ([(None, "3")], MK_CON),
    74 : ([], UNPACK),
    76 : ([('u16', None)], SLIDE),
    75 : ([('u8', None)], SLIDE),
    77 : ([(None, "1")], SLIDE),
    78 : ([(None, "2")], SLIDE),
    80 : ([('u16', None)], POP),
    79 : ([('u8', None)], POP),
    82 : ([('u16', None)], ALLOC),
    81 : ([('u8', None)], ALLOC),
    84 : ([('u16', None)], UPDATE),
    83 : ([('u8', None)], UPDATE),
    86 : ([('u16', None)], SELECT),
    85 : ([('u8', None)], SELECT),
    87 : ([(None, "0")], SELECT),
    88 : ([(None, "1")], SELECT),
    89 : ([], RETURN),
    90 : ([], EVAL),
    91 : ([], RETURN_EVAL),
    92 : ([('u16', None), ('1', [('u16', None)])], TABLE_SWITCH),
    93 : ([('u16', None), ('u16', None), ('1', [('s16', None), ('u16', None)])], LOOKUP_SWITCH),
    94 : ([('u16', None), ('u16', None), ('1', [('s16', None), ('u16', None)])], INT_SWITCH),
    95 : ([('u16', None)], JUMP_FALSE),
    96 : ([('u16', None)], JUMP),
    97 : ([], ADD_W),
    98 : ([], ADD_F),
    99 : ([], ADD_D),
    100 : ([], SUB_W),
    101 : ([], SUB_F),
    102 : ([], SUB_D),
    103 : ([], MUL_W),
    104 : ([], MUL_F),
    105 : ([], MUL_D),
    106 : ([], DIV_W),
    107 : ([], DIV_F),
    108 : ([], DIV_D),
    109 : ([], MOD_W),
    110 : ([], MOD_F),
    111 : ([], MOD_D),
    112 : ([], EQ_W),
    113 : ([], EQ_F),
    114 : ([], EQ_D),
    115 : ([], NE_W),
    116 : ([], NE_F),
    117 : ([], NE_D),
    118 : ([], LE_W),
    119 : ([], LE_F),
    120 : ([], LE_D),
    121 : ([], LT_W),
    122 : ([], LT_F),
    123 : ([], LT_D),
    124 : ([], GE_W),
    125 : ([], GE_F),
    126 : ([], GE_D),
    127 : ([], GT_W),
    128 : ([], GT_F),
    129 : ([], GT_D),
    130 : ([], NEG_W),
    131 : ([], NEG_F),
    132 : ([], NEG_D),
    133 : ([], STRING),
    134 : ([], FROM_ENUM),
    135 : ([], PRIMITIVE),
    136 : ([], SELECTOR_EVAL),
}

